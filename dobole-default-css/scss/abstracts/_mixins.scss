// Mixin to generate container classes from a map
@mixin generate-containers($sizes) {
  @each $name, $width in $sizes {
    .container-#{$name} {
      width: 100%;
      max-width: $width;
      margin-left: auto;
      margin-right: auto;
      padding-left: 15px;  // optional gutter
      padding-right: 15px; // optional gutter
    }
  }
}

// Mixin to generate utilities classes from a map
@mixin generate-utilities($breakpoints) {
  // Display
  @each $d in $display-values {
    .d-#{$d} { display: #{$d} !important; }
  }

  // Flex direction
  @each $fd in $flex-directions {
    .flex-#{$fd} { flex-direction: #{$fd} !important; }
  }

  // Justify content
  @each $j in $justify-values {
    .justify-#{$j} { justify-content: flex-#{$j} !important; }
  }

  // Align items
  @each $ai in $align-items-values {
    .items-#{$ai} { align-items: #{$ai} !important; }
  }

  // Responsive versions
  @each $key, $value in $breakpoints {
    @media (min-width: #{$value}) {
      @each $d in $display-values {
        .d-#{$key}-#{$d} { display: #{$d} !important; }
      }
      @each $fd in $flex-directions {
        .flex-#{$key}-#{$fd} { flex-direction: #{$fd} !important; }
      }
      @each $j in $justify-values {
        .justify-#{$key}-#{$j} { justify-content: flex-#{$j} !important; }
      }
      @each $ai in $align-items-values {
        .items-#{$key}-#{$ai} { align-items: #{$ai} !important; }
      }
    }
  }
}


// Create a styled button with hover effects
@mixin button-variant($bg, $color: #fff) {
  background: linear-gradient(135deg, lighten($bg, 5%), darken($bg, 5%));
  color: $color;
  border: none;
  box-shadow: 0 2px 5px rgba($bg, 0.3);
  transition: all 0.25s ease;

  &:hover {
    background: linear-gradient(135deg, lighten($bg, 10%), darken($bg, 10%));
    transform: scale(1.05);
    box-shadow: 0 4px 12px rgba($bg, 0.4);
  }

  &:active {
    transform: scale(0.98);
    box-shadow: 0 2px 6px rgba($bg, 0.5);
  }

  &:disabled,
  &.disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
  }
}


@mixin generate-spacing-utilities {
  @each $prop, $abbr in (margin: m, padding: p) {
    @each $size, $value in $spacers {
      .#{$abbr}-#{$size} { #{$prop}: #{$value} !important; }
      .#{$abbr}t-#{$size} { #{$prop}-top: #{$value} !important; }
      .#{$abbr}b-#{$size} { #{$prop}-bottom: #{$value} !important; }
      .#{$abbr}s-#{$size} { #{$prop}-inline-start: #{$value} !important; }
      .#{$abbr}e-#{$size} { #{$prop}-inline-end: #{$value} !important; }
      .#{$abbr}x-#{$size} {
        #{$prop}-inline-start: #{$value} !important;
        #{$prop}-inline-end: #{$value} !important;
      }
      .#{$abbr}y-#{$size} {
        #{$prop}-top: #{$value} !important;
        #{$prop}-bottom: #{$value} !important;
      }
    }
  }

  // Responsive versions
  @each $bp, $bp-val in $breakpoints {
    @media (min-width: #{$bp-val}) {
      @each $prop, $abbr in (margin: m, padding: p) {
        @each $size, $value in $spacers {
          .#{$abbr}-#{$size}-#{$bp} { #{$prop}: #{$value} !important; }
          .#{$abbr}t-#{$size}-#{$bp} { #{$prop}-top: #{$value} !important; }
          .#{$abbr}b-#{$size}-#{$bp} { #{$prop}-bottom: #{$value} !important; }
          .#{$abbr}s-#{$size}-#{$bp} { #{$prop}-inline-start: #{$value} !important; }
          .#{$abbr}e-#{$size}-#{$bp} { #{$prop}-inline-end: #{$value} !important; }
          .#{$abbr}x-#{$size}-#{$bp} {
            #{$prop}-inline-start: #{$value} !important;
            #{$prop}-inline-end: #{$value} !important;
          }
          .#{$abbr}y-#{$size}-#{$bp} {
            #{$prop}-top: #{$value} !important;
            #{$prop}-bottom: #{$value} !important;
          }
        }
      }
    }
  }
}

@mixin generate-radius-utilities {
  @each $name, $val in $radius {
    .rounded-#{$name} { border-radius: #{$val} !important; }
  }

  .rounded-top { border-top-left-radius: .25rem !important; border-top-right-radius: .25rem !important; }
  .rounded-bottom { border-bottom-left-radius: .25rem !important; border-bottom-right-radius: .25rem !important; }
  .rounded-start { border-top-left-radius: .25rem !important; border-bottom-left-radius: .25rem !important; }
  .rounded-end { border-top-right-radius: .25rem !important; border-bottom-right-radius: .25rem !important; }
}